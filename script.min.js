document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("constellation-canvas");if(t){const a=t.getContext("2d");let h=[],l=[],d=[];const c=25;let f,g;const p={x:void 0,y:void 0,radius:100};class u{constructor(t){this.generator=t,this.startHub=t,this.nodesToVisit=new Set(l.filter(t=>"default"===t.type));const e=Array.from(this.nodesToVisit);this.endHub=e[Math.floor(Math.random()*e.length)],this.path=this.findPath(this.startHub,this.endHub),this.pathIndex=0,this.progress=0,this.speed=.08*Math.random()+.02,this.color="rgba(255, 183, 77, 0.8)"}findPath(t,e){let s=[t],n=new Map,r=new Map(h.map(t=>[t,1/0]));r.set(t,0);let o=new Map(h.map(t=>[t,1/0]));for(o.set(t,this.heuristic(t,e));s.length>0;){let t=s.sort((t,e)=>o.get(t)-o.get(e))[0];if(t===e){let e=[t];for(;n.has(t);)t=n.get(t),e.unshift(t);return e}s=s.filter(e=>e!==t);for(let i of t.neighbors){let a=r.get(t)+1;a<r.get(i)&&(n.set(i,t),r.set(i,a),o.set(i,a+this.heuristic(i,e)),s.includes(i)||s.push(i))}}return[]}heuristic(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}update(){if(this.path&&0!==this.path.length){if(this.progress+=this.speed,this.progress>=1&&(this.progress=0,this.pathIndex++,this.pathIndex>=this.path.length-1)){if(this.startHub=this.endHub,"terminator"===this.startHub.type)return void(this.progress=1.1);this.nodesToVisit.delete(this.startHub);const t=Array.from(this.nodesToVisit);if(t.length>0)this.endHub=t[Math.floor(Math.random()*t.length)];else{const t=l.filter(t=>"terminator"===t.type);if(!(t.length>0))return void(this.progress=1.1);this.endHub=t[Math.floor(Math.random()*t.length)]}this.path=this.findPath(this.startHub,this.endHub),this.pathIndex=0,this.progress=0}}else this.progress=1.1}draw(){if(!this.path||this.pathIndex>=this.path.length-1)return;const t=this.path[this.pathIndex],e=this.path[this.pathIndex+1],s=t.x+(e.x-t.x)*this.progress,n=t.y+(e.y-t.y)*this.progress;a.beginPath(),a.arc(s,n,1.5,0,2*Math.PI),a.fillStyle=this.color,a.fill()}}function e(){const e=window.devicePixelRatio||1;t.width=t.offsetWidth*e,t.height=t.offsetHeight*e,a.scale(e,e),f=Math.floor(t.offsetWidth/c),g=Math.floor(t.offsetHeight/c),h=[],l=[],d=[];for(let t=0;t<f;t++)for(let e=0;e<g;e++){const s=t*c+c/2,n=e*c+c/2;h.push({x:s,y:n,neighbors:[]})}for(let t=0;t<h.length;t++)for(let e=t+1;e<h.length;e++){Math.sqrt(Math.pow(h[t].x-h[e].x,2)+Math.pow(h[t].y-h[e].y,2))<1.5*c&&(h[t].neighbors.push(h[e]),h[e].neighbors.push(h[t]))}const s=[{x:.1,y:.1},{x:.9,y:.1},{x:.1,y:.9},{x:.9,y:.9},{x:.5,y:.1},{x:.1,y:.5},{x:.9,y:.5},{x:.5,y:.9},{x:.5,y:.5},{x:.25,y:.25},{x:.75,y:.25},{x:.25,y:.75},{x:.75,y:.75},{x:.25,y:.5},{x:.75,y:.5},{x:.5,y:.25},{x:.5,y:.75}];h.length>0&&s.forEach(e=>{let s=null,n=1/0;const r=t.offsetWidth*e.x,o=t.offsetHeight*e.y;if(h.forEach(t=>{const e=Math.sqrt(Math.pow(t.x-r,2)+Math.pow(t.y-o,2));e<n&&(n=e,s=t)}),s){const t=1,e=h.filter(e=>Math.abs(e.x-s.x)<=t&&Math.abs(e.y-s.y)<=t);let n=e[Math.floor(Math.random()*e.length)];n&&!l.includes(n)?l.push(n):l.includes(s)||l.push(s)}});const n=[...l].sort(()=>.5-Math.random());n.slice(0,5).forEach(t=>t.type="generator"),n.slice(5,10).forEach(t=>t.type="terminator"),l.forEach(t=>{t.type||(t.type="default"),t.isHub=!0});const r=l.filter(t=>"generator"===t.type);r.forEach(t=>{for(let e=0;e<10;e++)d.push(new u(t))})}window.addEventListener("resize",e),t.addEventListener("mousemove",e=>{const s=t.getBoundingClientRect();p.x=e.clientX-s.left,p.y=e.clientY-s.top}),t.addEventListener("mouseleave",()=>{p.x=void 0,p.y=void 0}),t.addEventListener("click",e=>{const s=t.getBoundingClientRect(),n=e.clientX-s.left,r=e.clientY-s.top;let o=null;for(const t of l){if(Math.sqrt(Math.pow(t.x-n,2)+Math.pow(t.y-r,2))<15){o=t;break}}if(o)"default"===o.type&&(l=l.filter(t=>t!==o),d.forEach(t=>{if(t.nodesToVisit.delete(o),t.endHub===o){const e=Array.from(t.nodesToVisit);if(e.length>0)t.endHub=e[Math.floor(Math.random()*e.length)];else{const e=l.filter(t=>"terminator"===t.type);e.length>0?t.endHub=e[Math.floor(Math.random()*e.length)]:t.progress=1.1}t.path=t.findPath(t.startHub,t.endHub),t.pathIndex=0,t.progress=0}}));else{let t=null,e=1/0;h.forEach(s=>{const o=Math.sqrt(Math.pow(s.x-n,2)+Math.pow(s.y-r,2));o<e&&(e=o,t=s)}),t&&!l.includes(t)&&(t.type="default",t.isHub=!0,l.push(t),d.forEach(e=>e.nodesToVisit.add(t)))}}),e(),function e(){if(a.fillStyle="rgba(17, 24, 39, 0.25)",a.fillRect(0,0,t.width,t.height),a.fillStyle="rgba(255, 183, 77, 0.1)",h.forEach(t=>{a.beginPath(),a.arc(t.x,t.y,1,0,2*Math.PI),a.fill()}),l.forEach(t=>{switch(t.type){case"generator":a.fillStyle="rgba(110, 231, 183, 0.7)";break;case"terminator":a.fillStyle="rgba(252, 165, 165, 0.7)";break;default:a.fillStyle="rgba(255, 183, 77, 0.6)"}a.beginPath(),a.arc(t.x,t.y,4,0,2*Math.PI),a.fill()}),d=d.filter(t=>t.progress<=1),d.forEach(t=>{t.update(),t.draw()}),Math.random()>.95&&d.length<150){const t=l.filter(t=>"generator"===t.type);if(t.length>0){const e=t[Math.floor(Math.random()*t.length)];d.push(new u(e))}}requestAnimationFrame(e)}()}const s=document.getElementById("contact-form");s&&s.addEventListener("submit",function(t){t.preventDefault();const e=new FormData(s);fetch("/",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(e).toString()}).then(()=>{s.reset(),alert("Thank you for your message! It has been sent.")}).catch(t=>{alert("Sorry, there was an error sending your message. Please try again later.")})});const n=document.getElementById("hamburger-button"),r=document.getElementById("nav-links");n&&r&&(n.addEventListener("click",()=>{r.classList.toggle("active");const t=r.classList.contains("active");n.setAttribute("aria-expanded",t)}),r.addEventListener("click",t=>{"A"===t.target.tagName&&(r.classList.remove("active"),n.setAttribute("aria-expanded","false"))}));const o=document.querySelectorAll(".fade-in-section"),i=new IntersectionObserver(t=>{t.forEach(t=>{t.isIntersecting&&(t.target.classList.add("is-visible"),i.unobserve(t.target))})},{rootMargin:"0px",threshold:.1});o.forEach(t=>{i.observe(t)})});